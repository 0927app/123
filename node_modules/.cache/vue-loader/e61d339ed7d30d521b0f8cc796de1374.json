{"remainingRequest":"G:\\vuecli\\exam\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\vuecli\\exam\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\vuecli\\exam\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\vuecli\\exam\\src\\components\\Html.vue?vue&type=template&id=7c04334a&","dependencies":[{"path":"G:\\vuecli\\exam\\src\\components\\Html.vue","mtime":1601256039854},{"path":"G:\\vuecli\\exam\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\vuecli\\exam\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\vuecli\\exam\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\vuecli\\exam\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}